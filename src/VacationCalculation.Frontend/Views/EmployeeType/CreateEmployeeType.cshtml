@model VacationCalculation.Frontend.Models.EmployeeType.CreateEmployeeTypeViewModel

@{
    ViewData["Title"] = "Nuevo Tipo de empleado";
}

<div class="card">
    <div class="card-header">
        @ViewData["Title"]
    </div>
    <div class="card-body">
        <form class="row g-3 needs-validation" asp-action="CreateEmployeeType" method="post" novalidate>
            <div class="col-12">
                <label asp-for="Name" class="form-label">Nombre</label>
                <input asp-for="Name" class="form-control" type="text" required>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="col-12">
                <label asp-for="DaysPerYear" class="form-label">Dias</label>
                <input asp-for="DaysPerYear" class="form-control" type="number" required>
                <span asp-validation-for="DaysPerYear" class="text-danger"></span>
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary">Guardar</button>
                <a asp-action="ListEmployeeType" class="btn btn-secondary">Regresar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (() => {
          'use strict'

          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll('.needs-validation')

          // Loop over them and prevent submission
          Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }

              form.classList.add('was-validated')

            }, false)
          })
        })()
    </script>
}